<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getFlightsFlow" doc:id="07b7077f-8e19-4926-ac22-bd335af7c217" >
		<set-variable value="#[{&#10;	source: upper(message.attributes.queryParams.source),&#10;	destination: upper(message.attributes.queryParams.destination)&#10;}]" doc:name="sourceAndDestination" doc:id="81072dbe-a0b7-490a-8427-c95e8871228f" variableName="sourceAndDestination"/>
		<db:select doc:name="selectFlights" doc:id="b0174a1a-198c-452b-a0ab-201bbad717f4" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[SELECT * FROM flights f, plane_type pt where f.src = :source and f.destination = :destination and pt.id = f.planetypeid ]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	source: vars.sourceAndDestination.source,
	destination: vars.sourceAndDestination.destination
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="2c9a6bc4-af5f-4e1a-8048-fe3ea24c8cd7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	flightId: payload01.flightid as Number,
	flightCode: payload01.flightcode default "",
	departureDate: payload01.departuredate default "",
	departureTime: payload01.departuretime default "",
	source: payload01.src default "",
	destination: payload01.destination default "",
	availableSeats: payload01.availableseats as Number default 0,
	price: payload01.price as Number default 0,
	currency: payload01.currency default "",
	plane: {
		"type": payload01.flighttype,
		totalSeats: payload01.total_seats as Number default 0
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getFlightsByIdFlow" doc:id="c5f66d2d-7119-46c8-881e-3e486f5781ae" >
		<db:select doc:name="selectFlight" doc:id="1d8d2fad-7264-4c53-94f2-c1c9822c0ae8" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[SELECT * FROM flights f, plane_type pt where f.flightid = :flightId and pt.id = f.planetypeid ]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	flightId: message.attributes.uriParams.flightId
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="36489f6d-2dd4-418a-a941-ee11369b5242" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	flightId: payload[0].flightid as Number default 0,
	flightCode: payload[0].flightcode default "",
	departureDate: payload[0].departuredate default "",
	departureTime: payload[0].departuretime default "",
	source: payload[0].src default "",
	destination: payload[0].destination default "",
	availableSeats: payload[0].availableseats as Number default 0,
	price: payload[0].price as Number default 0,
	currency: payload[0].currency default "",
	plane: {
		"type": payload[0].flighttype,
		totalSeats: payload[0].total_seats as Number default 0
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getBookingDetailsByBookingIdFlow" doc:id="c7bda890-5be5-40ac-ba98-3eb88d5102ab" >
		<db:select doc:name="selectBookingDetails " doc:id="88b58515-8afe-4e47-9755-5d99c6aa3552" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[select * from flight_booking where bookingid= :bookingid;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bookingid: message.attributes.uriParams.bookingId
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="7df3be29-c673-4de1-853d-19d35356d8a0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	flightId: payload[0].flightid default "",
	flightCode: payload[0].flightcode default "",
	departureDate: payload[0].departuredate default "",
	departureTime: payload[0].departuretime default "",
	passengerName: payload[0].passengername default "",
	passengerIdProof: payload[0].passengeridproof default "",
	seatsBooked: payload[0].seatsbooked as Number default 0,
	pricePerSeat: payload[0].priceperseat as Number default 0,
	currency: payload[0].currency default "",
	bookingdate: payload[0].bookingdate default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="deleteBookingByBookingIdFlow" doc:id="ff08700b-b5d5-426a-9ff3-e554dc81817f" >
		<db:update doc:name="updateCancellationStatus" doc:id="72a8fd56-4134-4cae-980a-b41242afcd21" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[update flight_booking set
cancellation_status ='Y'
where bookingid= :bookingid]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bookingid: message.attributes.uriParams.bookingId
}]]]></db:input-parameters>
		</db:update>
		<ee:transform doc:name="Transform Message" doc:id="0608655f-d769-44f0-b753-37cddf15f8df" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "Booking Cancelled Successfully"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="updateBookingByBookingIdFlow" doc:id="b962cd00-0744-46f7-9b92-a52850af61e6" >
		<set-variable value="#[message.attributes.uriParams.bookingId]" doc:name="bookingid" doc:id="5c5fe29b-e915-4906-a270-905dc793f679" variableName="bookingidVar"/>
		<db:update doc:name="updateBookingDetails" doc:id="d83a5cd2-1349-4258-916c-654ff2c69afd" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[update flight_booking
set flightid = :flightid ,
flightcode= : flightcode ,
departuredate = :departuredate ,
departuretime = :departuretime ,
passengername = :passengername ,
passengeridproof= :passengeridproof, 
seatsbooked= :seatsbooked ,
priceperseat= :priceperseat, 
currency= :currency 
where bookingid= :bookingid ;
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
flightid: message.payload.flightId,
flightcode: message.payload.flightCode ,
departuredate: message.payload.departureDate, 
departuretime: message.payload.departureTime ,
passengername: message.payload.passengerName, 
passengeridproof: message.payload.passengerIdProof, 
seatsbooked: message.payload.seatsBooked as String default "", 
priceperseat: message.payload.pricePerSeat, 
currency: message.payload.currency , 
bookingid: vars.bookingidVar
}]]]></db:input-parameters>
		</db:update>
		<db:select doc:name="selectBookingDetails" doc:id="2bf8d086-fb2e-426e-ba92-617023617e57" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[select * from flight_booking
where bookingid= :bookingid;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bookingid: vars.bookingidVar
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="0d87c553-93b6-4002-b880-13e8ed2e6735" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	flightId: payload[0].flightid default "",
	flightCode: payload[0].flightcode default "",
	departureDate: payload[0].departuredate default "",
	departureTime: payload[0].departuretime default "",
	passengerName: payload[0].passengername default "",
	passengerIdProof: payload[0].passengeridproof default "",
	seatsBooked: payload[0].seatsbooked as Number default 0,
	pricePerSeat: payload[0].priceperseat as Number default 0,
	currency: payload[0].currency default "",
	bookingdate: payload[0].bookingdate default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow doc:id="9666258d-7baf-402e-b198-7f38b7a9bfed" name="postBookingFlow">
		<db:insert doc:name="insertBookingDetails" doc:id="a2285917-5acb-446a-88ae-63f7329ea361" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[INSERT INTO Flight_Booking 
(flightId,flightCode,departureDate,departureTime,passengerName,passengerIdProof,seatsBooked
,pricePerSeat,currency,bookingdate)values(:flightId,:flightCode,:departureDate,:departureTime,:passengerName,:passengerIdProof,:seatsBooked
,:pricePerSeat,:currency,:bookingdate)]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
flightId: message.payload.flightId,
flightCode: message.payload.flightCode,
departureDate: message.payload.departureDate,
departureTime: message.payload.departureTime,
passengerName: message.payload.passengerName,
passengerIdProof: message.payload.passengerIdProof,
seatsBooked: message.payload.seatsBooked as String default "",
pricePerSeat: message.payload.pricePerSeat as String default "",
currency: message.payload.currency,
bookingdate: message.payload.bookingdate
}]]]></db:input-parameters>
		</db:insert>
		<db:select doc:name="selectBookingDetails" doc:id="22a481c0-222f-4a2e-84e6-fb1b45aff397" config-ref="db-postgresqlConfig">
			<db:sql ><![CDATA[select * from flight_booking fb
order by bookingid desc limit 1
]]></db:sql>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="f583c815-6ed6-4ca6-a51f-9908857e0549" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	flightId: payload[0].flightid default "",
	flightCode: payload[0].flightcode default "",
	departureDate: payload[0].departuredate default "",
	departureTime: payload[0].departuretime default "",
	passengerName: payload[0].passengername default "",
	passengerIdProof: payload[0].passengeridproof default "",
	seatsBooked: payload[0].seatsbooked as Number default 0,
	pricePerSeat: payload[0].priceperseat as Number default 0,
	currency: payload[0].currency default "",
	bookingdate: payload[0].bookingdate default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
